"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[232],{4899:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"guides/importing-gpg-key","title":"Importing GPG keys","description":"You can only import one GPG key at a time. If you need to transfer more than one key, repeat the steps for each key.","source":"@site/docs/guides/importing-gpg-key.md","sourceDirName":"guides","slug":"/guides/importing-gpg-key","permalink":"/docs/guides/importing-gpg-key","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Working with Git","permalink":"/docs/guides/git-operations"},"next":{"title":"Guidelines","permalink":"/docs/contributing/"}}');var o=t(4848),s=t(8453);const i={},a="Importing GPG keys",c={},p=[{value:"From GPG keyring",id:"from-gpg-keyring",level:2},{value:"From OpenKeychain",id:"from-openkeychain",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"importing-gpg-keys",children:"Importing GPG keys"})}),"\n",(0,o.jsx)(n.p,{children:"You can only import one GPG key at a time. If you need to transfer more than one key, repeat the steps for each key."}),"\n",(0,o.jsx)(n.h2,{id:"from-gpg-keyring",children:"From GPG keyring"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"gpg --armor --gen-random 1 24 # generate a strong random password; use it in the next step\ngpg --armor --export-secret-keys <ID of key used for pass> | gpg --armor --symmetric --output myKeyForPass.sec.asc\n"})}),"\n",(0,o.jsxs)(n.p,{children:["File ",(0,o.jsx)(n.code,{children:"myKeyForPass.sec.asc"})," can be directly imported into Password Store; enter the password from the first step when asked for the backup code."]}),"\n",(0,o.jsx)(n.h2,{id:"from-openkeychain",children:"From OpenKeychain"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:'In the main app window, select the key that you use for pass/Password Store from the "My Keys" list.'}),"\n",(0,o.jsx)(n.li,{children:'In the window that appears, tap the three-dot menu in the top right corner and select "Backup key".'}),"\n",(0,o.jsx)(n.li,{children:"Write down the backup code, then save the backup file to your phone."}),"\n",(0,o.jsx)(n.li,{children:"Import this backup file into Password Store by navigating to Settings \u2192 PGP Settings \u2192 Key Manager \u2192 +, and enter the backup code when prompted."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(6540);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);